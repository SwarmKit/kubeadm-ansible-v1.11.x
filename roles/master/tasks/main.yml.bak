# 安裝kube-master
---
- name: 刪除 {{LOG_DIR}} 文件夾
  file: 
    path={{LOG_DIR}}
    state=absent

- name: 創建 {{CONF_DIR}},{{LOG_DIR}} 目錄
  file:
    dest="{{item}}"
    state=directory
    mode=0740
  with_items:
  - "{{BIN_DIR}}"
  - "{{LOG_DIR}}"

- name: 複製 kubectl二進制執行文件
  copy:
    src={{KUBE_CLIENT_DIR}}/{{item}} 
    dest={{BIN_DIR}}/{{item}} 
    mode=0540
  with_items:
  - kubectl

- name: 生成 admin-csr.json 證書簽名請求
  template: 
    src=admin-csr.json.j2 
    dest=./admin-csr.json

- name: 生成 admin 證書和私鑰
  shell: "{{BIN_DIR}}/cfssl gencert -ca=/etc/kubernetes/ssl/ca.pem -ca-key=/etc/kubernetes/ssl/ca-key.pem -config=/etc/kubernetes/ssl/ca-config.json -profile=kubernetes ./admin-csr.json | {{BIN_DIR}}/cfssljson -bare admin"

- name: 複製 admin 證書到 /etc/kubernetes/ssl目錄
  copy: 
    remote_src=true 
    src="{{item}}" 
    dest=/etc/kubernetes/ssl/{{item}}
  with_items:
  - admin.pem
  - admin-key.pem

- name: 創建 kubeconfig file (1) 設置集群參數
  shell: "{{BIN_DIR}}/kubectl config set-cluster kubernetes --certificate-authority=/etc/kubernetes/ssl/ca.pem --embed-certs=true --server={{KUBE_APISERVER}}"

- name: 創建 kubeconfig file (2) 設置客戶端認證參數
  shell: "{{BIN_DIR}}/kubectl config set-credentials admin --client-certificate=/etc/kubernetes/ssl/admin.pem --embed-certs=true --client-key=/etc/kubernetes/ssl/admin-key.pem"

- name: 創建 kubeconfig file (3) 設置context參數
  shell: "{{BIN_DIR}}/kubectl config set-context kubernetes --cluster=kubernetes --user=admin"
 
- name: 創建 kubeconfig file (4) 設置默認context
  shell: "{{BIN_DIR}}/kubectl config use-context kubernetes"

- name: 獲取生成的用於 kubectl的config配置文件
  fetch:
    src=/root/.kube/config
    dest=/opt/kubernetes/data/kube_client_config
    flat=yes

- name: 複製 kube-apiserver,kube-controller-manager,kube-scheduler,kube-proxy,kubelet 二進制文件
  copy:
    src={{KUBE_SERVER_DIR}}/{{item}} 
    dest={{BIN_DIR}}/{{item}} 
    mode=0540
  with_items:
  - kube-apiserver
  - kube-controller-manager
  - kube-scheduler
  - kube-proxy
  - kubelet

- name: 生成 kubernetes-csr.json 證書簽名請求
  template: 
    src=kubernetes-csr.json.j2 
    dest=./kubernetes-csr.json

- name: 生成 kubernetes 證書和私鑰
  shell: "{{BIN_DIR}}/cfssl gencert -ca=/etc/kubernetes/ssl/ca.pem -ca-key=/etc/kubernetes/ssl/ca-key.pem -config=/etc/kubernetes/ssl/ca-config.json -profile=kubernetes ./kubernetes-csr.json | {{BIN_DIR}}/cfssljson -bare kubernetes"

- name: 複製 kubernetes 證書到 /etc/kubernetes/ssl目錄
  copy: 
    remote_src=true 
    src="{{item}}" 
    dest=/etc/kubernetes/ssl/{{item}}
  with_items:
  - kubernetes.pem
  - kubernetes-key.pem

- name: 複製 basic-auth.csv到 /etc/kubernetes目錄
  template: 
    src=basic-auth.csv.j2
    dest=/etc/kubernetes/ssl/basic-auth.csv

- name: 創建 kube-apiserver.service文件
  template: 
    src=kube-apiserver.service.j2
    dest=/etc/systemd/system/kube-apiserver.service

- name: 創建 kube-controller-manager.service文件
  template: 
    src=kube-controller-manager.service.j2
    dest=/etc/systemd/system/kube-controller-manager.service

- name: 創建 kube-scheduler.service文件
  template:     
    src=kube-scheduler.service.j2
    dest=/etc/systemd/system/kube-scheduler.service

- name: 重新加載 systemd
  command: systemctl daemon-reload

- name: 啟動 kube-apiserver 
  service:
    name=kube-apiserver
    state=restarted
    enabled=yes

- name: 啟動 kube-controller-manager 服務
  service:
    name=kube-controller-manager
    state=restarted
    enabled=yes

- name: Sstart kube-scheduler.service 服務
  service:
    name=kube-scheduler
    state=restarted
    enabled=yes

- name: 清除臨時文件
  file:
    path="{{item}}"
    state=absent
  with_items:
  - admin.csr
  - admin-csr.json
  - admin.pem
  - admin-key.pem
  - kubernetes.csr
  - kubernetes-csr.json
  - kubernetes.pem
  - kubernetes-key.pem
